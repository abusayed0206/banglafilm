# .github/workflows/run_scrapers.yml

name: Scrape Movie Data

# This allows the workflow to be triggered manually from the Actions tab in GitHub.
on:
  workflow_dispatch:

jobs:
  scrape-and-commit:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository's code so the workflow can access it.
      - name: Check out repository
        uses: actions/checkout@v3

      # Step 2: Set up a Python environment.
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9' # You can use a different version if you prefer

      # Step 3: Install the necessary Python packages.
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4

      # Step 4: Run the Bengali scraper script.
      - name: Run Bengali Scraper
        run: python scraper_bengali.py

      # Step 5: Run the English scraper script.
      - name: Run English Scraper
        run: python scraper_english.py
      
      # Step 6: Run the script to convert CSVs to Markdown tables.
      - name: Convert CSV to Markdown
        run: python convert_to_markdown.py

      # Step 7: Commit the updated data files back to the repository.
      - name: Commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          # Add all files in the 'data' directory
          git add data/*
          # Commit the changes with a descriptive message.
          # The "[skip ci]" part prevents this commit from triggering another workflow run.
          git commit -m "Automated data scrape and update [skip ci]" || echo "No changes to commit"
          git push
